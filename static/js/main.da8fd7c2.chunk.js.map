{"version":3,"sources":["GlobalProvider.js","reusables.js","components/SpendList.js","firebase.js","components/SpendForm.js","Home.js","Report.js","App.js","serviceWorker.js","index.js"],"names":["GlobalContext","createContext","GlobalProvider","children","useState","expense","setExpense","time","setTime","Provider","value","formatNumber","number","Intl","NumberFormat","format","SpendList","useContext","className","dateArray","Date","toDateString","split","categoryAvail","item","includes","category","push","categoryObjects","map","amount","categoryByTime","today","month","year","filter","day","i","forEach","length","key","toUpperCase","renderSpendList","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","SpendForm","showAdd","closeShowAdd","setValue","useEffect","unsubscribe","firestore","collection","onSnapshot","snapshot","newExpense","docs","doc","id","data","onSubmit","e","preventDefault","valueToSend","Number","add","name","onChange","target","type","placeholder","Home","setShowAdd","onClick","to","style","background","reduce","a","b","calculateTotal","Report","setYear","setMonth","availableYears","setAvailableYears","availableMonths","setAvailableMonths","allMonths","years","monthsObj","index","idx","indexOf","sort","idxA","idxB","comparison","months","filteredExpense","expenseDate","dateObjects","val","renderReport","App","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.da8fd7c2.chunk.js","sourcesContent":["import React, { createContext, useState } from \"react\";\n\nexport const GlobalContext = createContext();\n\nexport const GlobalProvider = ({ children }) => {\n  const [expense, setExpense] = useState([]);\n  const [time, setTime] = useState(\"today\");\n  return (\n    <GlobalContext.Provider value={{ expense, setExpense, time, setTime }}>\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n","export function formatNumber(number) {\n  return new Intl.NumberFormat(\"de-DE\").format(number);\n}\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../GlobalProvider\";\nimport { formatNumber } from \"../reusables\";\n\nfunction SpendList() {\n  const { expense, time } = useContext(GlobalContext);\n\n  function renderSpendList() {\n    const date = new Date().toDateString();\n    const dateArray = date.split(\" \");\n    //get category available\n    const categoryAvail = [];\n    for (let item of expense) {\n      if (!categoryAvail.includes(item.category)) {\n        categoryAvail.push(item.category);\n      }\n    }\n    let categoryObjects = categoryAvail.map((item) => {\n      return {\n        category: item,\n        amount: 0,\n      };\n    });\n\n    let categoryByTime = [];\n    if (time === \"today\") {\n      const today = dateArray[2];\n      const month = dateArray[1];\n      const year = dateArray[3];\n\n      categoryByTime = expense.filter((item) => {\n        return item.day === today && item.month === month && item.year === year;\n      });\n    }\n    if (time === \"this_month\") {\n      const month = dateArray[1];\n      const year = dateArray[3];\n\n      categoryByTime = expense.filter((item) => {\n        return item.month === month && item.year === year;\n      });\n    }\n\n    //calculate based on categoryAvail and categoryByTime\n    for (let i = 0; i < categoryObjects.length; i++) {\n      let category = categoryObjects[i];\n      categoryByTime.forEach((item) => {\n        if (category.category === item.category) {\n          categoryObjects[i].amount += item.amount;\n        }\n      });\n    }\n\n    //console.log(categoryByTime);\n    if (categoryByTime.length < 1) {\n      categoryObjects = [];\n    }\n    categoryObjects = categoryObjects.filter((item) => {\n      return item.amount !== 0;\n    });\n\n    const list = categoryObjects.map((item) => {\n      return (\n        <div key={item.category} className=\"category-spend\">\n          <h4>{item.category.toUpperCase()}</h4>\n          <p>{formatNumber(item.amount)}</p>\n        </div>\n      );\n    });\n    return list;\n  }\n\n  return <section className=\"home-spend\">{renderSpendList()}</section>;\n}\n\nexport default SpendList;\n","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyC4vUdx8ZdKZqx_dNNuWyrcWfrg80aHwnE\",\n  authDomain: \"true-expense.firebaseapp.com\",\n  databaseURL: \"https://true-expense.firebaseio.com\",\n  projectId: \"true-expense\",\n  storageBucket: \"true-expense.appspot.com\",\n  messagingSenderId: \"1073448959892\",\n  appId: \"1:1073448959892:web:c90d369ff0ed8f3c7c9981\",\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport firebase from \"../firebase\";\nimport { GlobalContext } from \"../GlobalProvider\";\n\nfunction SpendForm({ showAdd, closeShowAdd }) {\n  const { setExpense } = useContext(GlobalContext);\n  const [value, setValue] = useState({\n    category: \"food\",\n    amount: \"\",\n  });\n\n  useEffect(() => {\n    const unsubscribe = firebase\n      .firestore()\n      .collection(\"expense\")\n      .onSnapshot((snapshot) => {\n        const newExpense = snapshot.docs.map((doc) => {\n          return {\n            id: doc.id,\n            ...doc.data(),\n          };\n        });\n        setExpense(newExpense);\n        setValue({ ...value });\n        closeShowAdd();\n      });\n\n    return () => unsubscribe();\n  }, []);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const date = new Date().toDateString();\n    const dateArray = date.split(\" \");\n    const valueToSend = {\n      ...value,\n      amount: value.amount ? Number(value.amount) : 0,\n      day: dateArray[2],\n      month: dateArray[1],\n      year: dateArray[3],\n    };\n    firebase.firestore().collection(\"expense\").add(valueToSend);\n  };\n\n  return (\n    <form\n      className={`component-add ${showAdd ? \"bottom-0\" : \"bottom-min-100\"}`}\n      onSubmit={onSubmit}\n    >\n      <select\n        name=\"\"\n        id=\"\"\n        value={value.category}\n        //set value here, current value is the same as value\n        onChange={(e) => setValue({ ...value, category: e.target.value })}\n      >\n        <option value=\"food\">Food</option>\n        <option value=\"snack\">Snack</option>\n        <option value=\"cigarette\">Cigarette</option>\n        <option value=\"kosan\">Kosan</option>\n        <option value=\"fams\">Fams</option>\n        <option value=\"others\">Others</option>\n      </select>\n      <input\n        type=\"number\"\n        placeholder=\"Amount\"\n        value={value.amount}\n        //set value here, current value is the same as value\n        onChange={(e) => setValue({ ...value, amount: e.target.value })}\n      />\n      <button type=\"submit\">SUBMIT</button>\n    </form>\n  );\n}\n\nexport default SpendForm;\n","import React, { useState, useContext } from \"react\";\nimport { GlobalContext } from \"./GlobalProvider\";\nimport { Link } from \"react-router-dom\";\nimport { formatNumber } from \"./reusables\";\n\nimport SpendList from \"./components/SpendList\";\nimport SpendForm from \"./components/SpendForm\";\n\nexport default function Home() {\n  const [showAdd, setShowAdd] = useState(false);\n  const { time, setTime, expense } = useContext(GlobalContext);\n  function calculateTotal() {\n    const date = new Date().toDateString();\n    const dateArray = date.split(\" \");\n    let categoryByTime = [];\n    if (time === \"today\") {\n      const today = dateArray[2];\n      const month = dateArray[1];\n      const year = dateArray[3];\n\n      categoryByTime = expense.filter((item) => {\n        return item.day === today && item.month === month && item.year === year;\n      });\n    }\n    if (time === \"this_month\") {\n      const month = dateArray[1];\n      const year = dateArray[3];\n\n      categoryByTime = expense.filter((item) => {\n        return item.month === month && item.year === year;\n      });\n    }\n    const arrayAmount = categoryByTime.map((item) => {\n      return item.amount;\n    });\n    const totalAmount = arrayAmount.reduce((a, b) => {\n      return a + b;\n    }, 0);\n\n    return formatNumber(totalAmount);\n  }\n  return (\n    <>\n      <section className=\"home-head-section\">\n        <button className=\"btn-add\" onClick={() => setShowAdd(!showAdd)}>\n          {showAdd ? \"x\" : \"+\"}\n        </button>\n        <Link to=\"/report\">\n          <button className=\"btn-report\">R</button>\n        </Link>\n\n        <p className=\"home-title\">TRUE EXPENSE v0.1</p>\n        <div className=\"home-button-selection\">\n          <button\n            style={{ background: time === \"today\" ? \"#18a3e4\" : \"transparent\" }}\n            onClick={() => setTime(\"today\")}\n          >\n            TODAY\n          </button>\n          <button\n            style={{\n              background: time === \"this_month\" ? \"#18a3e4\" : \"transparent\",\n            }}\n            onClick={() => setTime(\"this_month\")}\n          >\n            THIS MONTH\n          </button>\n        </div>\n        <h4 className=\"current-amount\">Rp. {calculateTotal()}</h4>\n      </section>\n\n      <SpendList />\n      <SpendForm showAdd={showAdd} closeShowAdd={() => setShowAdd(false)} />\n    </>\n  );\n}\n","import React, { useContext, useState, useEffect } from \"react\";\nimport firebase from \"./firebase\";\nimport { GlobalContext } from \"./GlobalProvider\";\nimport { formatNumber } from \"./reusables\";\n\nexport default function Report() {\n  const { expense, setExpense } = useContext(GlobalContext);\n  const [year, setYear] = useState(new Date().toDateString().split(\" \")[3]);\n  const [month, setMonth] = useState(new Date().toDateString().split(\" \")[1]);\n  const [availableYears, setAvailableYears] = useState([]);\n  const [availableMonths, setAvailableMonths] = useState([]);\n\n  useEffect(() => {\n    const unsubscribe = firebase\n      .firestore()\n      .collection(\"expense\")\n      .onSnapshot((snapshot) => {\n        const newExpense = snapshot.docs.map((doc) => {\n          return {\n            id: doc.id,\n            ...doc.data(),\n          };\n        });\n        const allMonths = [\n          \"Jan\",\n          \"Feb\",\n          \"Mar\",\n          \"Apr\",\n          \"May\",\n          \"Jun\",\n          \"Jul\",\n          \"Aug\",\n          \"Sep\",\n          \"Oct\",\n          \"Nov\",\n          \"Dec\",\n        ];\n        const years = [];\n        let monthsObj = [];\n\n        for (let i = 0; i < newExpense.length; i++) {\n          if (!years.includes(newExpense[i].year)) {\n            years.push(newExpense[i].year);\n          }\n          if (!monthsObj.includes(newExpense[i].month)) {\n            monthsObj.push(newExpense[i].month);\n          }\n        }\n\n        monthsObj.forEach((item, index) => {\n          monthsObj[index] = {\n            name: item,\n            idx: allMonths.indexOf(item),\n          };\n        });\n\n        function compare(a, b) {\n          const idxA = a.idx;\n          const idxB = b.idx;\n\n          let comparison = 0;\n          if (idxA > idxB) {\n            comparison = 1;\n          } else if (idxA < idxB) {\n            comparison = -1;\n          }\n          return comparison * -1;\n        }\n        monthsObj.sort(compare);\n\n        const months = [];\n        for (let i = 0; i < monthsObj.length; i++) {\n          if (!months.includes(monthsObj[i].name)) {\n            months.push(monthsObj[i].name);\n          }\n        }\n\n        //need to sort months and years\n        years.sort();\n        months.push(\"none\");\n        setAvailableMonths(months);\n        setAvailableYears(years);\n        setExpense(newExpense);\n      });\n\n    return () => unsubscribe();\n  }, []);\n\n  const renderReport = () => {\n    if (expense.length < 1) {\n      return;\n    }\n    //condition to render report\n\n    if (month === \"none\") {\n      //monthly report for selected year\n      return <p>{year}</p>;\n    } else {\n      //daily report for selected month\n      const filteredExpense = expense.filter((item) => {\n        return item.year === year && item.month === month;\n      });\n      const expenseDate = [];\n      filteredExpense.forEach((item) => {\n        if (!expenseDate.includes(item.day)) {\n          expenseDate.push(item.day);\n        }\n      });\n      expenseDate.sort();\n      const dateObjects = expenseDate.map((item) => {\n        return {\n          day: item,\n          amount: 0,\n        };\n      });\n      filteredExpense.forEach((item) => {\n        dateObjects.forEach((val, i) => {\n          if (item.day === val.day) {\n            dateObjects[i].amount += item.amount;\n          }\n        });\n      });\n      //console.log(dateObjects);\n      return (\n        <div className=\"daily-parent\">\n          {dateObjects.map((item, i) => {\n            return (\n              <div key={i} className=\"daily-report\">\n                <p>{item.day}</p>\n                <p>{formatNumber(item.amount)}</p>\n                <button>detail</button>\n              </div>\n            );\n          })}\n        </div>\n      );\n    }\n  };\n\n  return (\n    <div className=\"report\">\n      <h4>Report</h4>\n      <div className=\"report-parameter\">\n        <select\n          name=\"\"\n          id=\"\"\n          value={month}\n          onChange={(e) => setMonth(e.target.value)}\n        >\n          {availableMonths.map((item) => {\n            return (\n              <option key={item} value={item}>\n                {item}\n              </option>\n            );\n          })}\n        </select>\n        <select\n          name=\"\"\n          id=\"\"\n          value={year}\n          onChange={(e) => setYear(e.target.value)}\n        >\n          {availableYears.map((item) => {\n            return (\n              <option key={item} value={item}>\n                {item}\n              </option>\n            );\n          })}\n        </select>\n      </div>\n      <div className=\"report-table\">{renderReport()}</div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\n\nimport { GlobalProvider } from \"./GlobalProvider\";\n\nimport Home from \"./Home\";\nimport Report from \"./Report\";\n\nimport \"./App.scss\";\n\nfunction App() {\n  return (\n    <HashRouter>\n      <GlobalProvider>\n        <div className=\"App\">\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/report\" component={Report} />\n        </div>\n      </GlobalProvider>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}